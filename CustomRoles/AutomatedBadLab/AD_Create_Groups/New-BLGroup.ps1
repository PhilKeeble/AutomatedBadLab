Function New-BLGroup {

    # Creates new AD group with random attributes

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $True)][int32]$GroupCount
    )

    Write-Log -Message "Creating $GroupCount AutomatedBadLab Groups"

    # Currently only have 100 groups to choose from
    If ($GroupCount -gt 100) {
        $GroupCount = 100
    }

    # Create a loop to create the specified number of computer objects
    for ($CreatedGroups= 1; $CreatedGroups -le $GroupCount; $CreatedGroups++) {

        # Pick random OU to put the group in and a random user to be the owner
        $Owner = (Get-ADUser -Filter * | Get-Random).DistinguishedName
        $OUPath = (ADOrganizationalUnit -Filter * | Get-Random).DistinguishedName
        $Description = "Group generated by AutomatedBadLab"
        
        # Pick a random entry from Groups.txt to use as the group name
        $GroupName = Get-Content -Path (Join-Path $PSScriptRoot 'Groups.txt') | Get-Random

        # If the group already exists, break out of the loop and try again
        If (Get-ADGroup -Filter { SamAccountName -eq $GroupName }) {
            Continue
        }

        $GroupScope = 'DomainLocal', 'Global', 'Universal' | Get-Random
        $GroupCategory = 'Security', 'Distribution' | Get-Random

        # Provide groups that permit foreign memberships
        If ($GroupScope -eq 'DomainLocal') {
            $GroupCategory = 'Security'
        }

        # Create the group
        New-ADGroup -Name $GroupName -Description $Description -Path $OUPath -GroupCategory $GroupCategory -GroupScope $GroupScope -ManagedBy $Owner

        # Track progress
        Write-Progress -Id 1 -Activity "Creating AD Groups" -Status "Creating Group $CreatedGroups of $GroupCount" `
        -CurrentOperation $GroupName -PercentComplete ($CreatedGroups / $GroupCount * 100)
    } 
    Write-Progress -Id 1 -Activity "Created AD Groups" -Status "Completed" -PercentComplete 100 -Completed
}
