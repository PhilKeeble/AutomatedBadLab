Function New-BLOUStructure {

    Write-Log -Message "Creating Tiered Organisation Unit Structure"
    
    $3LetterCodeCSV = Join-Path $PSScriptRoot '3lettercodes.csv'

    $ObjectSubOUs = @{
        'BDE' = 'Business Development'
        'HRE' = 'Human Relations'
        'FIN' = 'Finance'
        'OGC' = 'Office of the General Counsel'
        'FSR' = 'Field Services'
        'AWS' = 'AWS Stuff'
        'ESM' = 'Endpoint System Management'
        'SEC' = 'Information Security'
        'ITS' = 'Information Technology Services'
        'GOO' = 'Google Cloud'
        'AZR' = 'Azure Cloud stuff'
        'TST' = 'Testing Admin Stuff'
    }

    $ObjectSubOUs = $ObjectSubOUs.GetEnumerator() | ForEach-Object {
        [PSCustomObject]@{
            Name = $_.Key
            Description = $_.Value
        }
    }    

    $TopLevelOUs = @('Admin', 'Tier 1', 'Tier 2', 'Stage', 'Quarantine', 'Grouper-Groups', 'People', 'Testing', 'Locations', 'Business Units', 'Projects')
    $AdminSubOUs = @('Tier 0', 'Tier 1', 'Tier 2', 'Staging')
    $AdminObjectOUs = @('Accounts', 'Servers', 'Devices', 'Permissions', 'Roles')
    $ObjectSubOUs = @('ServiceAccounts', 'Groups', 'Devices', 'Test')

    $Locations = @('North America', 'Europe', 'Asia', 'South America')
    $BusinessUnits = @('Sales', 'IT', 'Finance', 'HR')
    $Projects = @('Project Alpha', 'Project Beta')

    $Description = "OU generated by AutomatedBadLab"

    $DN = (Get-ADDomain).distinguishedname

    $Counter = 0

    # Create Top Level OUs
    foreach ($OUName in $TopLevelOUs) {
        New-ADOrganizationalUnit -Name $OUName -Description $Description -ProtectedFromAccidentalDeletion $False
        $FullDN = "OU=$OUName,$DN"

        # Update progress
        $Counter++
        Write-Progress -Id 1 -Activity "Creating OUs and Child Objects" -CurrentOperation $OUName -PercentComplete (($Counter / $TopLevelOUs.count) * 100)

        # Create Sub OUs for Admin
        if ($OUName -eq 'Admin') {
            foreach ($AdminSubOU in $AdminSubOUs) {
                New-ADOrganizationalUnit -Name $AdminSubOU -Path $FullDN -Description $Description
                $adminsubfulldn = "OU=$AdminSubOU,$FullDN"

                if ($AdminSubOU -ne 'Staging') {
                    foreach ($AdminobjectOU in $AdminobjectOUs) {
                        $adminOUPrefix = switch ($AdminSubOU) {
                            'Tier 0' { "T0-" }
                            'Tier 1' { "T1-" }
                            'Tier 2' { "T2-" }
                        }
                        $adminobjectoucombo = $adminOUPrefix + $adminobjectou
                        New-ADOrganizationalUnit -Name $adminobjectoucombo -Path $adminsubfulldn -Description $Description
                    }
                }
            }
        }
        # Add complexity: Locations
        elseif ($OUName -eq 'Locations') {
            foreach ($location in $Locations) {
                New-ADOrganizationalUnit -Name $location -Path $FullDN -Description $Description
            }
        }
        # Add complexity: Business Units
        elseif ($OUName -eq 'Business Units') {
            foreach ($unit in $BusinessUnits) {
                New-ADOrganizationalUnit -Name $unit -Path $FullDN -Description $Description
            }
        }
        # Add complexity: Projects
        elseif ($OUName -eq 'Projects') {
            foreach ($project in $Projects) {
                New-ADOrganizationalUnit -Name $project -Path $FullDN -Description $Description
            }
        }
        # Existing logic
        elseif (($OUName -eq 'Tier 1') -or ($OUName -eq 'Tier 2') -or ($OUName -eq 'Stage')) {
            $csvlist = import-csv $3LetterCodeCSV

            foreach ($OU in $csvlist) {
                New-ADOrganizationalUnit -Name ($OU.name) -Path $FullDN -Description "$($OU.description) - $Description"
                $csvdn = "OU=$($OU.name),$FullDN"
                
                foreach ($ObjectSubOU in $ObjectSubOUs) {
                    New-ADOrganizationalUnit -Name $ObjectSubOU -Path $csvdn -Description $Description
                }
            }
        }
        elseif ($OUName -eq 'People') {
            $csvlist = import-csv $3LetterCodeCSV

            foreach ($OU in $csvlist) {
                New-ADOrganizationalUnit -Name ($OU.name) -Path $FullDN -Description "$($OU.description) - $Description"
            }
            
            New-ADOrganizationalUnit -Name 'Deprovisioned' -Path $FullDN -Description "User account that have been deprovisioned by the IDM System - $Description"
            New-ADOrganizationalUnit -Name 'Unassociated' -Path $FullDN -Description "User Object that do have have any department affliation - $Description"
        }
    }
    # To close the progress bar at the end
    Write-Progress -Id 1 -Activity "Creating OUs and Child Objects" -Status "Completed" -PercentComplete 100 -Completed
}
