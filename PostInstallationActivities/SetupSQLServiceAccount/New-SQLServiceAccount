# https://dba.stackexchange.com/questions/22006/how-to-change-sql-server-service-account-using-ps
# https://sqljana.wordpress.com/2015/10/22/using-powershell-add-user-or-group-to-local-administrators-group-in-windows-create-sql-server-login/

Function New-SQLServiceAccount {

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $True)][string]$ComputerName,
        [Parameter(Mandatory = $True)][string]$SQLUsername,
        [Parameter(Mandatory = $True)][SecureString]$SQLPassword,
        [Parameter(Mandatory = $True)][string]$SQLDatabase
    )

    [System.Reflection.Assembly]::LoadWithPartialName("Microsoft.SqlServer.SqlWmiManagement") | out-null

    $SMOWmiserver = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') $ComputerName

    # These just act as some queries about the SQL Services on the machine you specified.
    $SMOWmiserver.Services | Select-Object name, type, ServiceAccount, DisplayName, Properties, StartMode, StartupParameters | Format-Table

    # Same information just pivot the data
    $SMOWmiserver.Services | Select-Object name, type, ServiceAccount, DisplayName, Properties, StartMode, StartupParameters | Format-List

    # Specify the "Name" (from the query above) of the one service whose Service Account you want to change.
    $ChangeService=$SMOWmiserver.Services | Where-Object {$_.name -eq $SQLDatabase} 

    # Specify the new service account credentials
    $DomainUsername = "$((Get-ADDomain).NetBIOSName)\$SQLUsername"

    # Set the new service account credentials
    $ChangeService.SetServiceAccount($DomainUsername, $SQLPassword)

    # Finally allow the service account permission to access the DB
    Invoke-Sqlcmd -Database 'master' -Query "CREATE LOGIN [$DomainUsername] FROM WINDOWS WITH DEFAULT_DATABASE=[master]; EXEC master..sp_addsrvrolemember @loginame = N'$DomainUsername', @rolename = N'sysadmin';" -QueryTimeout 10

}