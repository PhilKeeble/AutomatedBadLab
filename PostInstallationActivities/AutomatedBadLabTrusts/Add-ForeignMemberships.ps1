# Logger function
Function Write-Log {
    param (
        [Parameter(Mandatory = $true)]
        [string]$Message,
        
        [ValidateSet("Default", "Informational", "Warning")]
        [string]$Level = "Default"
    )

    $Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    
    switch ($Level) {
        "Default"       { $LogMessage = "$Timestamp - [+] $Message" }
        "Informational" { $LogMessage = "$Timestamp -   [+] $Message" }
        "Warning"       { $LogMessage = "$Timestamp -   [!] $Message" }
    }
    
    $LogMessage | Out-File -FilePath "C:\AutomatedBadLab.log" -Append
}

Write-Log -Message "Creating Cross Domain Memberships on $((Get-ADDomain).DNSRoot)"

# Get all AutomatedBadLab groups on the local domain which can accept foreign memberships
$LocalGroups = @(Get-ADGroup -Filter "GroupScope -eq 'DomainLocal' -and GroupCategory -eq 'Security' -and Description -eq 'Group generated by AutomatedBadLab'" -Properties GroupScope, GroupCategory, Description)

# Retrieve trusted domains
$TrustedDomains = (Get-ADTrust -Filter *).Name

# Locate all users from trusted domains which possess weak passwords
foreach ($TrustedDomain in $TrustedDomains) {
    $ForeignVulnUsers += @(Get-ADUser -Server $TrustedDomain -Filter {Description -like "*Just so I dont forget my password is:*"})
}

# Add foreign user to local group memberships
foreach ($ForeignVulnUser in $ForeignVulnUsers) {

    # Create foreign user -> local group membership
    $LocalGroup = $LocalGroups | Get-Random

    try {
        Add-ADGroupMember -Identity $LocalGroup -Members $ForeignVulnUser
        Write-Log -Message "$ForeignVulnUser is a member of $LocalGroup" -Level "Informational"
    } catch {
        Write-Log -Message "$ForeignVulnUser could not be added to $LocalGroup" -Level "Warning"
    }

    # Create a random foreign group -> local group membership
    $ForeignGroup = Get-ADGroup -Server ($TrustedDomains | Get-Random) -Filter "Description -eq 'Group generated by AutomatedBadLab'" -Properties Description | Get-Random
    $LocalGroup = $LocalGroups | Get-Random

    try {
        Add-ADGroupMember -Identity $LocalGroup -Members $ForeignGroup
        Write-Log -Message "$ForeignGroup is a member of $LocalGroup" -Level "Informational"
    } catch {
        Write-Log -Message "$ForeignGroup could not be added to $LocalGroup" -Level "Warning"
    }
}
